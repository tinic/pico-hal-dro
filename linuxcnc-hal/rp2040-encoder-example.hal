# Example HAL configuration for RP2040 Quadrature Encoder Interface
# This shows how to integrate the RP2040 encoder interface with LinuxCNC

# Load the RP2040 encoder component
loadusr -W rp2040_encoder

# Create signals for encoder position data
newsig x-encoder-pos float
newsig y-encoder-pos float
newsig z-encoder-pos float
newsig a-encoder-pos float
newsig encoder-connected bit
newsig encoder-test-mode s32

# Connect RP2040 encoder outputs to signals
net x-encoder-pos <= rp2040_encoder.0.position-0
net y-encoder-pos <= rp2040_encoder.0.position-1
net z-encoder-pos <= rp2040_encoder.0.position-2
net a-encoder-pos <= rp2040_encoder.0.position-3
net encoder-connected <= rp2040_encoder.0.connected

# Test mode control (0=off, 1=sine, 2=circular, 3=linear, 4=random)
# Example: Set test mode to 0 (disabled) for normal operation
setp rp2040_encoder.0.test-mode 0
# Or connect to a signal for dynamic control
# net encoder-test-mode => rp2040_encoder.0.test-mode

# Scale factors - convert encoder counts to meaningful units
# These are bidirectional (io pins) - they read the device's current scale on startup
# and can be changed during operation
# Example: 1000 counts per mm = 0.001 mm/count
setp rp2040_encoder.0.scale-0 0.001  # X axis: 0.001 mm per count
setp rp2040_encoder.0.scale-1 0.001  # Y axis: 0.001 mm per count
setp rp2040_encoder.0.scale-2 0.001  # Z axis: 0.001 mm per count
setp rp2040_encoder.0.scale-3 0.1    # A axis: 0.1 degrees per count

# Reset pins - rising edge triggers position reset to zero
# Connect these to UI buttons or other controls
# net x-zero-button => rp2040_encoder.0.reset-0
# net y-zero-button => rp2040_encoder.0.reset-1
# net z-zero-button => rp2040_encoder.0.reset-2
# net a-zero-button => rp2040_encoder.0.reset-3

# Example: Connect to PyVCP panel for DRO display
# net x-encoder-pos => pyvcp.x-dro
# net y-encoder-pos => pyvcp.y-dro
# net z-encoder-pos => pyvcp.z-dro
# net a-encoder-pos => pyvcp.a-dro
# net encoder-connected => pyvcp.encoder-status-led

# Example: Use for axis feedback (be careful with this!)
# net x-encoder-pos => axis.0.motor-pos-fb
# net y-encoder-pos => axis.1.motor-pos-fb
# net z-encoder-pos => axis.2.motor-pos-fb

# Show component status
show comp rp2040_encoder
show pin rp2040_encoder